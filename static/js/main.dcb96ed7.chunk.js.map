{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","nums","numIds","ops","opIds","state","display","showingResult","canPutDecimal","onClick","e","innerText","target","setState","evaluated","eval","toString","includes","parseInt","lastChar","slice","charAt","length","this","store","id","map","num","className","indexOf","op","href","rel","style","color","React","Component"],"mappings":"oKAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K,w4CCZMe,KAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvCC,OAAS,CACP,QACA,QACA,OACA,OACA,OACA,MACA,MACA,MACA,QACA,QAEFC,IAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAC3BC,MAAQ,CAAC,SAAU,WAAY,WAAY,MAAO,UAE9CN,I,szBACJO,MAAQ,CACNC,QAAS,IACTC,eAAe,EACfC,eAAe,G,MAGjBC,QAAU,SAACC,GACT,gBAAkD,MAAKL,MAA/CC,QAAR,YAAQA,QAASC,cAAjB,YAAiBA,cAAeC,cAAhC,YAAgCA,cAC5BG,UAAcD,EAAEE,OAAhBD,UAEJ,OAAQA,WACN,IAAK,IACH,MAAKE,SAAS,CACZP,QAAS,IACTC,eAAe,EACfC,eAAe,IAEjB,MAGF,IAAK,IACCA,eACF,MAAKK,SAAS,CAAEP,QAASA,QAAUK,UAAWH,eAAe,IAE/D,MAGF,IAAK,IACH,IAAMM,UAAYC,KAAKT,SAASU,WAChC,MAAKH,SAAS,CACZP,QAASQ,UACTP,eAAe,EACfC,eAAe,IAEjB,MAGF,QACE,GAAIP,KAAKgB,SAASC,SAASP,YAET,MAAZL,UAAqC,IAAlBC,cACrB,MAAKM,SAAS,CAAEP,QAASK,UAAWJ,eAAe,IAEnD,MAAKM,SAAS,CAAEP,QAASA,QAAUK,gBAEhC,CAEL,MAAKE,SAAS,CAAEL,eAAe,IAE/B,IAAMW,SAAWb,QAAQc,OAAO,GAE5BjB,IAAIc,SAASE,UAEG,MAAdR,WAAkC,MAAbQ,SAEoB,MAAvCb,QAAQe,OAAOf,QAAQgB,OAAS,IAElC,MAAKT,SAAS,CAAEP,QAASA,QAAUK,YAEf,MAAbQ,UAAkC,MAAdR,UAE7B,MAAKE,SAAS,CACZP,QAASA,QAAQc,MAAM,GAAI,GAAKT,YAEZ,MAAbQ,UAAkC,MAAdR,UAE7B,MAAKE,SAAS,CACZP,QAASA,QAAUK,YAIrB,MAAKE,SAAS,CACZP,QAASA,QAAQc,MAAM,GAAI,GAAKT,YAKpC,MAAKE,SAAS,CAAEP,QAASA,QAAUK,YAGrC,MAAKE,SAAS,CAAEN,eAAe,O,+NAMvC,WAAU,IAAD,OACP,EAA2BgB,KAAKlB,MAAxBC,EAAR,EAAQA,QAASkB,EAAjB,EAAiBA,MAEjB,OACE,+HACE,8EACE,6EAAQA,IACR,qEAAQC,GAAG,UAAX,SAAsBnB,IAEtB,mEAAKmB,GAAG,iBAAR,UACE,qEAAQA,GAAG,QAAQhB,QAASc,KAAKd,QAAjC,eAICR,KAAKyB,KAAI,SAACC,GAAD,OACR,qEACEC,UAAS,gBAAmB,IAARD,EAAY,SAAW,IAC3ClB,QAAS,EAAKA,QAEdgB,GAAIvB,OAAOD,KAAK4B,QAAQF,IAJ1B,SAMGA,GAHIA,MAOT,qEAAQF,GAAG,UAAUhB,QAASc,KAAKd,QAAnC,kBAKF,kEAAKgB,GAAG,gBAAR,SACGtB,IAAIuB,KAAI,SAACI,GAAD,OACP,qEACEL,GAAE,UAAKrB,MAAMD,IAAI0B,QAAQC,KACzBF,UAAW,WAEXnB,QAAS,EAAKA,QAJhB,SAMGqB,GAHIA,WASb,mFACM,IACJ,gEACEC,KAAK,mCACLnB,OAAO,SACPoB,IAAI,aACJC,MAAO,CAAEC,MAAO,SAJlB,mC,KArIQC,6CAAMC,WAmJTtC,4B","file":"static/js/main.dcb96ed7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst nums = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0],\r\n  numIds = [\r\n    \"seven\",\r\n    \"eight\",\r\n    \"nine\",\r\n    \"four\",\r\n    \"five\",\r\n    \"six\",\r\n    \"one\",\r\n    \"two\",\r\n    \"three\",\r\n    \"zero\"\r\n  ],\r\n  ops = [\"/\", \"*\", \"-\", \"+\", \"=\"],\r\n  opIds = [\"divide\", \"multiply\", \"subtract\", \"add\", \"equals\"];\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    display: \"0\",\r\n    showingResult: false,\r\n    canPutDecimal: true\r\n  };\r\n\r\n  onClick = (e) => {\r\n    const { display, showingResult, canPutDecimal } = this.state,\r\n      { innerText } = e.target;\r\n\r\n    switch (innerText) {\r\n      case \"C\": {\r\n        this.setState({\r\n          display: \"0\",\r\n          showingResult: false,\r\n          canPutDecimal: true\r\n        });\r\n        break;\r\n      }\r\n\r\n      case \".\": {\r\n        if (canPutDecimal) {\r\n          this.setState({ display: display + innerText, canPutDecimal: false });\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"=\": {\r\n        const evaluated = eval(display).toString();\r\n        this.setState({\r\n          display: evaluated,\r\n          showingResult: true,\r\n          canPutDecimal: true\r\n        });\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        if (nums.includes(parseInt(innerText))) {\r\n          // pressed a number\r\n          if (display === \"0\" || showingResult === true) {\r\n            this.setState({ display: innerText, showingResult: false });\r\n          } else {\r\n            this.setState({ display: display + innerText });\r\n          }\r\n        } else {\r\n          // pressed a operator\r\n          this.setState({ canPutDecimal: true });\r\n\r\n          const lastChar = display.slice(-1);\r\n\r\n          if (ops.includes(lastChar)) {\r\n            // operator after operator\r\n            if (innerText === \"-\" && lastChar === \"-\") {\r\n              // subtract after subtract\r\n              if (display.charAt(display.length - 2) !== \"-\") {\r\n                // penult char is not subtract (not 3 subtracts in a row)\r\n                this.setState({ display: display + innerText });\r\n              }\r\n            } else if (lastChar === \"-\" && innerText !== \"-\") {\r\n              // other operator after subtract\r\n              this.setState({\r\n                display: display.slice(0, -2) + innerText\r\n              });\r\n            } else if (lastChar !== \"-\" && innerText === \"-\") {\r\n              // subtract after other operator\r\n              this.setState({\r\n                display: display + innerText\r\n              });\r\n            } else {\r\n              // non-subtract operator after non-subtract operator\r\n              this.setState({\r\n                display: display.slice(0, -1) + innerText\r\n              });\r\n            }\r\n          } else {\r\n            // operator after number\r\n            this.setState({ display: display + innerText });\r\n          }\r\n\r\n          this.setState({ showingResult: false });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { display, store } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <main>\r\n          <small>{store}</small>\r\n          <header id=\"display\">{display}</header>\r\n\r\n          <div id=\"nums-container\">\r\n            <button id=\"clear\" onClick={this.onClick}>\r\n              C\r\n            </button>\r\n\r\n            {nums.map((num) => (\r\n              <button\r\n                className={`number${num === 0 ? \" big-h\" : \"\"}`}\r\n                onClick={this.onClick}\r\n                key={num}\r\n                id={numIds[nums.indexOf(num)]}\r\n              >\r\n                {num}\r\n              </button>\r\n            ))}\r\n\r\n            <button id=\"decimal\" onClick={this.onClick}>\r\n              .\r\n            </button>\r\n          </div>\r\n\r\n          <div id=\"ops-container\">\r\n            {ops.map((op) => (\r\n              <button\r\n                id={`${opIds[ops.indexOf(op)]}`}\r\n                className={\"operator\"}\r\n                key={op}\r\n                onClick={this.onClick}\r\n              >\r\n                {op}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </main>\r\n\r\n        <div>\r\n          por{\" \"}\r\n          <a\r\n            href=\"https://campsite.bio/codigoisaac\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            style={{ color: \"black\" }}\r\n          >\r\n            codigoisaac\r\n          </a>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"sourceRoot":""}